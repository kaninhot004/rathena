// Server start -> Check if initialize -> Setup monster id each room
// Spawn monster when player enter to reduce RAM usage
// Spawn +1 more on monster dead -> also check boss spawn if not spawn yet -> If chance passed -> Mark boss spawn -> Boss dead -> Mark boss dead
// Every 10 minutes -> Move players to prontera (No custom map player are move) -> Map clean up -> Setup monster id each room
-	script	TheBoxRoomDatabase	-1,{
	end;
	
OnMinute00:
OnMinute10:
OnMinute20:
OnMinute30:
OnMinute40:
OnMinute50:

	// Every 10 minutes -> Re-initialize
	$isTheBoxRoomInit = 0;
	
	.@isTenMinuteFire = 1;
	
OnSetupMonsterId:
	// Check if already initialize
	if ($isTheBoxRoomInit)
	return;

	freeloop(1);
	
	// Loop 100 rooms
	// Clear monster on map
	for(.@i = 0; .@i < 100; .@i++)
	killmonsterall $maps$[$playingMaps[.@i]];
	
	// Clear playing map, monster and boss
	deletearray $playingMaps[0],getarraysize($playingMaps);
	deletearray $isMapSpawnMonster[0],getarraysize($isMapSpawnMonster);
	deletearray $isBossAlive[0],getarraysize($isBossAlive);
	deletearray $tbrBossGID[0],getarraysize($tbrBossGID);
	
	// Loop 100 rooms
	for(.@i = 0; .@i < 100; .@i++){
		// Clear monster set list
		deletearray getd("$tbrMID" + .@i + "[0]"),getarraysize(getd("$tbrMID" + .@i));

		// Setup monster set list
		.@tier = (.@i / 10) + 1;
		
		setarray getd("$tbrMID" + .@i + "[0]")
		,getd("$attackableMonsterTier" + .@tier + "Ids[" + rand(getarraysize(getd("$attackableMonsterTier" + .@tier + "Ids"))) + "]")
		,getd("$attackableMonsterTier" + .@tier + "Ids[" + rand(getarraysize(getd("$attackableMonsterTier" + .@tier + "Ids"))) + "]")
		,getd("$attackableMonsterTier" + .@tier + "Ids[" + rand(getarraysize(getd("$attackableMonsterTier" + .@tier + "Ids"))) + "]")
		,getd("$attackableMonsterTier" + .@tier + "Ids[" + rand(getarraysize(getd("$attackableMonsterTier" + .@tier + "Ids"))) + "]")
		;
		
		// Setup EXP multiplier
		setarray getd("$tbrExpMultiplier" + .@i + "[0]")
		,(rand(100) < 10) ? 5	// 10%		EXP x5
		: (rand(100) < 20) ? 4	// 20%		EXP x4
		: (rand(100) < 40) ? 3	// 40%		EXP x3
		: (rand(100) < 80) ? 2	// 80%		EXP x2
		: 1								// 100%	EXP x1
		,(rand(100) < 10) ? 5	// 10%		EXP x5
		: (rand(100) < 20) ? 4	// 20%		EXP x4
		: (rand(100) < 40) ? 3	// 40%		EXP x3
		: (rand(100) < 80) ? 2	// 80%		EXP x2
		: 1								// 100%	EXP x1
		,(rand(100) < 10) ? 5	// 10%		EXP x5
		: (rand(100) < 20) ? 4	// 20%		EXP x4
		: (rand(100) < 40) ? 3	// 40%		EXP x3
		: (rand(100) < 80) ? 2	// 80%		EXP x2
		: 1								// 100%	EXP x1
		,(rand(100) < 10) ? 5	// 10%		EXP x5
		: (rand(100) < 20) ? 4	// 20%		EXP x4
		: (rand(100) < 40) ? 3	// 40%		EXP x3
		: (rand(100) < 80) ? 2	// 80%		EXP x2
		: 1								// 100%	EXP x1
		;
		
		// Setup Drop multiplier
		setarray getd("$tbrDropMultiplier" + .@i + "[0]")
		,(rand(100) < 5) ? 5		// 5%		Drop x5
		: (rand(100) < 10) ? 4	// 10%		Drop x4
		: (rand(100) < 20) ? 3	// 20%		Drop x3
		: (rand(100) < 40) ? 2	// 40%		Drop x2
		: 1								// 100%	Drop x1
		,(rand(100) < 5) ? 5		// 5%		Drop x5
		: (rand(100) < 10) ? 4	// 10%		Drop x4
		: (rand(100) < 20) ? 3	// 20%		Drop x3
		: (rand(100) < 40) ? 2	// 40%		Drop x2
		: 1								// 100%	Drop x1
		,(rand(100) < 5) ? 5		// 5%		Drop x5
		: (rand(100) < 10) ? 4	// 10%		Drop x4
		: (rand(100) < 20) ? 3	// 20%		Drop x3
		: (rand(100) < 40) ? 2	// 40%		Drop x2
		: 1								// 100%	Drop x1
		,(rand(100) < 5) ? 5		// 5%		Drop x5
		: (rand(100) < 10) ? 4	// 10%		Drop x4
		: (rand(100) < 20) ? 3	// 20%		Drop x3
		: (rand(100) < 40) ? 2	// 40%		Drop x2
		: 1								// 100%	Drop x1
		;
		
		// Setup Zeny multiplier
		setarray getd("$tbrZenyMultiplier" + .@i + "[0]")
		,(rand(100) < 5) ? 5		// 5%		Zeny x5
		: (rand(100) < 10) ? 4	// 10%		Zeny x4
		: (rand(100) < 20) ? 3	// 20%		Zeny x3
		: (rand(100) < 40) ? 2	// 40%		Zeny x2
		: 1								// 100%	Zeny x1
		,(rand(100) < 5) ? 5		// 5%		Zeny x5
		: (rand(100) < 10) ? 4	// 10%		Zeny x4
		: (rand(100) < 20) ? 3	// 20%		Zeny x3
		: (rand(100) < 40) ? 2	// 40%		Zeny x2
		: 1								// 100%	Zeny x1
		,(rand(100) < 5) ? 5		// 5%		Zeny x5
		: (rand(100) < 10) ? 4	// 10%		Zeny x4
		: (rand(100) < 20) ? 3	// 20%		Zeny x3
		: (rand(100) < 40) ? 2	// 40%		Zeny x2
		: 1								// 100%	Zeny x1
		,(rand(100) < 5) ? 5		// 5%		Zeny x5
		: (rand(100) < 10) ? 4	// 10%		Zeny x4
		: (rand(100) < 20) ? 3	// 20%		Zeny x3
		: (rand(100) < 40) ? 2	// 40%		Zeny x2
		: 1								// 100%	Zeny x1
		;
		
		// Setup boss
		set getd("$tbrBMID" + .@i),$mvpIds[rand(getarraysize($mvpIds))];
		// Setup boss spawn rate (Only for room 31+)
		set getd("$tbrBossRate" + .@i),(.@i < 30) ? 0 : .@i - 29;
		
		// Setup x DROP
		$tbrNormalDropMultiplier[.@i] = rand(0,200);
		
		// Setup map
		$playingMaps[.@i] = callfunc("GetAvailableMap");
	}
	
	// Cursed room
	$isCursedRoomEven = rand(0,1);
	
	for(.@i = 0; .@i < 20; .@i++)
	donpcevent "ห้อง#" + (.@i + 1) + "::OnRefreshInfo";

	freeloop(0);
	
	// Mark as initialized
	$isTheBoxRoomInit = 1;
	if(.@isTenMinuteFire){
		addrid(0,1);
		if(!IsCustomMap(strcharinfo(3)) && !@isOnlyGodEnter){
			announce "Map ถูก Reset แล้ว..",bc_self;
			addtimer 1000,strnpcinfo(0) + "::OnMapResetWarp";
		}
	}
	
	end;

OnMapResetWarp:
	warp "Save",0,0;
	end;
	
OnInit:
	// Spawn amount per map
	$tbrSpawnAmount = 150;
	
	// Clear monster and boss
	deletearray $isMapSpawnMonster[0],getarraysize($isMapSpawnMonster);
	deletearray $isBossAlive[0],getarraysize($isBossAlive);
	deletearray $tbrBossGID[0],getarraysize($tbrBossGID);
	
	// First time initialize
	if(!$isTheBoxRoomInit)
	callsub OnSetupMonsterId;

	end;
}
