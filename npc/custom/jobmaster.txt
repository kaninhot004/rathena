//===== rAthena Script =======================================
//= Job Master
//===== Description: =========================================
//= A fully functional job changer.
//===== Additional Comments: =================================
//= 1.0 Initial script. [Euphy]
//= 1.1 Fixed reset on Baby job change.
//= 1.2 Added Expanded Super Novice support and initial Kagerou/Oboro support.
//= 1.3 Kagerou/Oboro added.
//= 1.4 Rebellion added.
//= 1.5 Added option to disable RebirthClass. [mazvi]
//= 1.6 Added option to get job related equipment on change. [Braniff]
//= 1.7 Readability changes. Also added BabyExpanded and BabySummoner classes. [Jey]
//= 1.8 Added option to disable Baby Novice Only but Baby Class can be Enabled [mazvi]
//= 1.9 Migrate/Integrate to Global Functions Platinum Skills. [mazvi]
//= 2.0 Added 4th class [Lemongrass]
//============================================================

prontera,138,184,8	script	เฟรเซีย	10468,{
	function Get_Job_Equip;
	
	function	Require_Level	{
		if((BaseLevel < getarg(0)) || (JobLevel < getarg(1))){
			.@blvl = (getarg(0) - BaseLevel);
			.@jlvl = (getarg(1) - JobLevel);
			mes "Level ที่ต้องการ:";
			mes ((getarg(0) > 1) ? "^bb0000" + getarg(0) + "^000000 (^bb0000Lv.^000000) / " : "") + "^00bb00" + getarg(1) + "^000000 (^00bb00Job Lv.^000000)";
			mes "ต้องการอีก " + ((.@blvl) ? "^bb0000" + .@blvl + "^000000 Lv. " + ((.@jlvl) ? "และ " : "") : "") + ((.@jlvl) ? "^00bb00" + .@jlvl + "^000000 Job Lv. " : "");
			close;
		}
		return;
	}

	function Is_Baby	{ return (getarg(0,eaclass()) & EAJL_BABY); }

	function	Can_Change_Fourth	{
		if(!.FourthClass)
		return false;
		if((Class == 4239) || (Class == 4240))
		return true;
		if((eaclass() & (EAJL_THIRD | EAJL_UPPER)) != (EAJL_THIRD | EAJL_UPPER))
		return false;
		if(eaclass() & EAJL_FOURTH)
		return false;
		if(roclass(eaclass() | EAJL_FOURTH) < 0)
		return false;
		return true;
	}
	
	function	Can_Change_Third	{
		if(!.ThirdClass)
		return false;
		if(!(eaclass() & EAJL_2))
		return false;
		if(eaclass() & EAJL_THIRD)
		return false;
		if(roclass(eaclass() | EAJL_THIRD) < 0)
		return false;
		if((eaclass() & EAJ_UPPERMASK) == EAJ_SUPER_NOVICE)
		return false;
		if(Is_Baby() && (!.BabyClass || !.BabyThird))
		return false;
		return true;
	}

	function	Can_Rebirth	{
		if(!.RebirthClass)
		return false;
		if(!(eaclass() & EAJL_2))
		return false;
		if(eaclass() & (EAJL_UPPER | EAJL_THIRD))
		return false;
		if(roclass(eaclass() | EAJL_UPPER) < 0)
		return false;
		if(Is_Baby() && !.BabyClass)
		return false;
		return true;
	}

	function	Is_First_Cls	{ return (getarg(0) <= EAJ_TAEKWON); }

	function	Check_Riding	{
		if(checkfalcon() || checkcart() || checkriding() || ismounting()){
			mes "โปรดนำ " + (checkfalcon() ? "Falcon" : "") + (checkcart() ? "รถเข็น" : "") + (checkriding() ? "Peco" : "") + (ismounting() ? "พาหนะ" : "") + " ออกไปเสียก่อน";
			close;
		}
		return;
	}
	
	function	Check_SkillPoints	{
		if(.SkillPointCheck && SkillPoint){
			mes "โปรดใช้ Skill Points ให้หมดเสียก่อน";
			close;
		}
		return;
	}

	function	Job_Options	{
		.@argcount = getargcount();
		.@arr_size = getarraysize(getarg(0));
		for(.@i = 1; .@i < .@argcount; .@i++)
		setarray getelementofarray(getarg(0),.@arr_size++),getarg(.@i);
	}

	Check_Riding();
	Check_SkillPoints();

	.@eac = eaclass();
	.@fourth_possible = Can_Change_Fourth();
	.@third_possible = Can_Change_Third();
	.@rebirth_possible = Can_Rebirth();
	.@first_eac = (.@eac & EAJ_BASEMASK);
	.@second_eac = (.@eac & EAJ_UPPERMASK);
	if(.@rebirth_possible){
		Require_Level(.Req_Rebirth[0],.Req_Rebirth[1]);
		Job_Options(.@job_opt,Job_Novice_High);
	}
	if(.@third_possible){
		Require_Level(.Req_Third[0],.Req_Third[1]);
		Job_Options(.@job_opt,roclass(.@eac | EAJL_THIRD));
	}
	if(.@fourth_possible){
		Require_Level(.Req_Fourth[0],.Req_Fourth[1]);
		if(Class == 4239)
		Job_Options(.@job_opt,4302);
		else if(Class == 4240)
		Job_Options(.@job_opt,4303);
		else
		Job_Options(.@job_opt,roclass(.@eac | EAJL_FOURTH));
	}
	
	if(.SecondExpanded && ((.@eac & EAJ_UPPERMASK) == EAJ_SUPER_NOVICE) && !(eaclass() & EAJL_THIRD)){
		if(!Is_Baby(.@eac) || (.BabyClass && .BabyExpanded)){
			Require_Level(.Req_Exp_SNOVI[0],.Req_Exp_SNOVI[1]);
			Job_Options(.@job_opt,roclass(.@eac | EAJL_THIRD));
		}
	}

	if(.FourthExpanded && (.@eac == EAJ_REBELLION)){
		Require_Level(.Req_Fourth[0],.Req_Fourth[1]);
		Job_Options(.@job_opt,roclass(EAJ_NIGHT_WATCH));
	}

	if(.FourthExpanded && (.@eac == EAJ_KAGEROUOBORO)){
		Require_Level(.Req_Fourth[0],.Req_Fourth[1]);
		Job_Options(.@job_opt,roclass(EAJ_SHINKIRO_SHIRANUI));
	}

	if(.FourthExpanded && (.@eac == EAJ_SUPER_NOVICE_E)){
		Require_Level(.Req_Fourth[0],.Req_Fourth[1]);
		Job_Options(.@job_opt,roclass(EAJ_HYPER_NOVICE));
	}
	
	if(.FourthExpanded && (.@eac == EAJ_SUMMONER)){
		Require_Level(.Req_SHandler[0],.Req_SHandler[1]);
		Job_Options(.@job_opt,roclass(EAJ_SPIRIT_HANDLER));
	}

	if(.SecondExpanded && (((.@eac & (~EAJL_BABY)) == EAJ_NINJA) || ((.@eac & (~EAJL_BABY)) == EAJ_GUNSLINGER))){
		if(!Is_Baby(.@eac) || (.BabyClass && .BabyExpanded)){
			Require_Level(.Req_Exp_NJ_GS[0],.Req_Exp_NJ_GS[1]);
			Job_Options(.@job_opt,roclass(.@eac | EAJL_2_1));
		}
	}
	
	if((.@first_eac == EAJ_NOVICE) && (.@second_eac != EAJ_SUPER_NOVICE)){
		Require_Level(.Req_First[0],.Req_First[1]);
		switch(Class){
		case Job_Novice:
			Job_Options(.@job_opt,Job_Swordman,Job_Mage,Job_Archer,Job_Acolyte,Job_Merchant,Job_Thief,Job_Super_Novice,Job_Taekwon,Job_Gunslinger,Job_Ninja);
			if(.BabyNovice)
			Job_Options(.@job_opt,Job_Baby);
			break;
		case Job_Novice_High:
			if(.LastJob && lastJob)
			Job_Options(.@job_opt,roclass((eaclass(lastJob) & EAJ_BASEMASK) | EAJL_UPPER));
			else
			Job_Options(.@job_opt,Job_Swordman_High,Job_Mage_High,Job_Archer_High,Job_Acolyte_High,Job_Merchant_High,Job_Thief_High);
			break;
		case Job_Baby:
			if(!.BabyClass)
			break;
			Job_Options(.@job_opt,Job_Baby_Swordman,Job_Baby_Mage,Job_Baby_Archer,Job_Baby_Acolyte,Job_Baby_Merchant,Job_Baby_Thief);
			if(.BabyExpanded)
			Job_Options(.@job_opt,Job_Super_Baby,Job_Baby_Taekwon,Job_Baby_Gunslinger,Job_Baby_Ninja);
			if(.BabySummoner)
			Job_Options(.@job_opt,Job_Baby_Summoner);
			break;
		default:
			mes "เกิดข้อผิดพลาด";
			close;
		}
	}
	else if(Is_First_Cls(.@eac) || Is_First_Cls(.@eac & (~EAJL_UPPER)) || (.BabyClass && Is_First_Cls(.@eac & (~EAJL_BABY)))){
		.@class1 = roclass(.@eac | EAJL_2_1);
		.@class2 = roclass(.@eac | EAJL_2_2);
		if(.LastJob && lastJob && (.@eac & EAJL_UPPER)){
			Require_Level(.Req_Second[0],.Req_Second[1]);
			Job_Options(.@job_opt,lastJob + Job_Novice_High);
		} else {
			if(.@class1){
				Require_Level(.Req_Second[0],.Req_Second[1]);
				Job_Options(.@job_opt,.@class1);
			}
			if(.@class2){
				Require_Level(.Req_Second[0],.Req_Second[1]);
				Job_Options(.@job_opt,.@class2);
			}
		}
	}
	
	function Job_Menu;
	Job_Menu(.@job_opt);
	close;

	function	Job_Menu	{
		function Confirm_Change;
		while(true){
			.@opt_cnt = getarraysize(getarg(0));
			if(.@opt_cnt <= 0){
				mes "ไม่มีอาชีพที่สูงกว่านี้แล้ว";
				close;
			}

			.@selected = 0;
			if(.@opt_cnt > 1){
				mes "เลือกอาชีพ";
				.@menu$ = "";
				for(.@i = 0; .@i < .@opt_cnt; .@i++){
					if(getelementofarray(getarg(0),.@i) == Job_Novice_High)
					.@jobname$ = "^0055FFRebirth^000000";
					else
					.@jobname$ = jobname(getelementofarray(getarg(0),.@i));
					.@menu$ = .@menu$ + " ~ " + .@jobname$ + ":";
				}
				.@menu$ = .@menu$ + " ~ ^777777ยกเลิก^000000";
				.@selected = (select(.@menu$) - 1);
				if((.@selected < 0) || (.@selected >= .@opt_cnt))
				close;
				next;
			}
			.@class = getelementofarray(getarg(0),.@selected);
			if(((.@class == Job_Super_Novice) || (.@class == Job_Super_Baby)) && (BaseLevel < .SNovice)){
				mes "Lv. " + .SNovice + " ขึ้นไปถึงจะเป็น " + jobname(.@class) + " ได้";
				return;
			}
			Confirm_Change(.@class,.@opt_cnt > 1);
			next;
		}
		return;
	}

	function	Job_Change	{
		.@previous_class = Class;
		.@to_cls = getarg(0);
		next;
		mes "เป็น " + jobname(.@to_cls) + " แล้ว!";
		if((.@to_cls == Job_Novice_High) && .LastJob)
		lastJob = Class;
		jobchange .@to_cls;
		if(.@to_cls == Job_Novice_High)
		resetlvl(1);
		else if(.@to_cls == Job_Baby){
			resetstatus;
			resetskill;
			SkillPoint = 0;
		}
		specialeffect2 EF_ANGEL2;
		specialeffect2 EF_ELECTRIC;
		if(.@previous_class != Class){
			if(.Platinum)
			callfunc "F_GetPlatinumSkills";
			if(.GetJobEquip)
			Get_Job_Equip();
		}
		close;
	}

	function	Confirm_Change	{
		.@class = getarg(0, -1);
		.@back = getarg(1, false);
		if((.@class < 0) || (eaclass(.@class) == -1)){
			mes "เกิดข้อผิดพลาด";
			close;
		}
		mes "เปลี่ยนเป็น ^0055FF" + jobname(.@class) + "^000000?";
		.@job_option$ = " ~ เปลี่ยนเป็น ^0055FF" + jobname(.@class) + "^000000";
		if(.@class == Job_Novice_High)
		.@job_option$ = " ~ ^0055FFRebirth^000000";
		
		if(select(.@job_option$ + ": ~ ^777777" + ((.@back) ? "เลือกใหม่" : "ยกเลิก") + "^000000") == 1)
		Job_Change(.@class);
		if(!.@back)
		close;
		return;
	}

	function	Get_Job_Equip	{
		.@eac = eaclass();
		if(.@eac & EAJL_FOURTH)
		rentitem 490087,864000;
		else if(.@eac & EAJL_THIRD){
			rentitem 2795,864000;
			switch(BaseJob){
			case Job_Knight: rentitem 5746,864000; break;
			case Job_Wizard: rentitem 5753,864000; break;
			case Job_Hunter: rentitem 5748,864000; break;
			case Job_Priest: rentitem 5747,864000; break;
			case Job_Blacksmith: rentitem 5749,864000; break;
			case Job_Assassin: rentitem 5755,864000; break;
			case Job_Crusader: rentitem 5757,864000; break;
			case Job_Sage: rentitem 5756,864000; break;
			case Job_Bard: rentitem 5751,864000; break;
			case Job_Dancer: rentitem 5758,864000; break;
			case Job_Monk: rentitem 5754,864000; break;
			case Job_Alchemist: rentitem 5752,864000; break;
			case Job_Rogue: rentitem 5750,864000; rentitem 6121,864000; rentitem 6122,864000; break;
			}
		} else if (.@eac & EAJL_2){
			switch(BaseJob){
			case Job_Knight: rentitem 1163,864000; break;
			case Job_Priest: rentitem 1522,864000; break;
			case Job_Wizard: rentitem 1617,864000; break;
			case Job_Blacksmith: rentitem 1360,864000; break;
			case Job_Hunter: rentitem 1718,864000; break;
			case Job_Assassin: rentitem 1254,864000; break;
			case Job_Crusader: rentitem 1410,864000; break;
			case Job_Monk: rentitem 1807,864000; break;
			case Job_Sage: rentitem 1550,864000; break;
			case Job_Rogue: rentitem 1222,864000; break;
			case Job_Alchemist: rentitem 1126,864000; break;
			case Job_Bard: rentitem 1907,864000; break;
			case Job_Dancer: rentitem 1960,864000; break;
			case Job_Super_Novice: rentitem 1208,864000; break;
			case Job_Star_Gladiator: rentitem 1550,864000; break;
			case Job_Soul_Linker: rentitem 1617,864000; break;
			}
		} else {
			switch(BaseClass){
			case Job_Swordman: rentitem 1108,864000; break;
			case Job_Mage: rentitem 1602,864000; break;
			case Job_Archer: rentitem 1705,864000; break;
			case Job_Acolyte: rentitem 1505,864000; break;
			case Job_Merchant: rentitem 1302,864000; break;
			case Job_Thief: rentitem 1208,864000; break;
			case Job_Gunslinger: rentitem 13101,864000; break;
			case Job_Ninja: rentitem 13010,864000; break;
			}
		}
		return;
	}

OnInit:
	.FourthClass = true;
	.FourthExpanded = true;
	.ThirdClass = true;
	.RebirthClass = true;
	.SecondExpanded = true;
	.BabyNovice = true;
	.BabyClass = true;
	.BabyThird = true;
	.BabyExpanded = true;
	.BabySummoner = true;
	.LastJob = true;
	.SkillPointCheck = true;
	.Platinum = true;
	.GetJobEquip = true;

	setarray .Req_First[0],1,10;
	setarray .Req_Second[0],1,40;
	setarray .Req_Rebirth[0],99,50;
	setarray .Req_Third[0],99,50;
	setarray .Req_Fourth[0],200,70;
	setarray .Req_Exp_NJ_GS[0],99,70;
	setarray .Req_Exp_SNOVI[0],99,99;
	setarray .Req_SHandler[0],200,60;
	.SNovice = 45;
	
	if(PACKETVER < 20161207){
		if(.BabyExpanded)
		debugmes "jobmaster: BabyExpanded is disabled due to outdated PACKETVER.";
		if(.BabySummoner)
		debugmes "jobmaster: BabySummoner is disabled due to outdated PACKETVER.";
		.BabyExpanded = false;
		.BabySummoner = false;
	}
	
	waitingroom "เปลี่ยนอาชีพ",0;
	end;
}
